# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zxGiV7vQNIDgmxZB81p0kkSsVJcd0RWI
"""

!pip install numpy

!pip install pandas

import pandas as pd
data = pd.read_csv("/content/4. Dataset-Insurance Company.csv")

!pip install pycaret

! pip install markupsafe==2.0.1

! pip install Jinja2

from pycaret import *

from pycaret.regression import *

from pycaret.regression import *
r2=setup(data,target='charges',session_id=123,)

lr1 = create_model('lr')

plot_model(lr1, plot = 'residuals')

from pycaret.regression import *
r2 = setup(data, target = 'charges', session_id = 123,
           normalize = True,
           polynomial_features = True, trigonometry_features = True,
           feature_interaction=True, 
           bin_numeric_features= ['age', 'bmi'])

lr2=create_model('lr')

plot_model(lr2, plot = 'residuals')

save_model(lr2, model_name = 'LR2-Experiment2')

!pip install flask

from flask import Flask, request, url_for, redirect, render_template, jsonify
from pycaret.regression import *
import pandas as pd
import pickle
import numpy as np

app = Flask(__name__)

model = load_model('LR2-Experiment2')
cols = ['age', 'sex', 'bmi', 'children', 'smoke', 'region']

@app.route('/')
def home():
  return render_template("home.html")

@app.route('/predict',methods=['POST'])
def predict():
  int_features = [x for x in request.form.vakues()]
  final = np.array(int_features)
  data_unseen = pd.DataFrame([final], columns = cols)
  prediction = predict_model(model, data=data_unseen, round = 0)
  prediction = int(prediction.label[0])
  return render_template('home.html', pred='Expected Bill will be {}'.format(prediction))

from flask import Flask,request,url_for,redirect,render_template,jsonify
from pycaret.regression import *
import pandas as pd
import pickle
import numpy as np

app=Flask(__name__)

model=load_model('LR2-Experiment2')
cols=['age','sex','bmi','children','smoker','region']

@app.route('/')
def home():
  return render_template("home.html")

@app.route('/predict',methods=['POST'])
def predict():
  int_features=[x for x in request.form.values()]
  final=np.array(int_features)
  data_unseen=pd.DataFrame([final],columns=cols)
  prediction=predict_model(model,data=data_unseen,round=0)
  prediction=int(prediction.Label[0])
  return render_template('home.html',pred='Expected Bill will be{}'.format(prediction))

